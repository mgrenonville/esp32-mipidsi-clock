import { TimeOfDay, MonsterEnv, MonsterPosition, Globals } from "common.slint";
import { SpriteSheet } from "spritesheet.slint";

import { Monster } from "monster.slint";



component DayAndNightImage inherits Rectangle {
    in property <image> day_image;
    in property <image> night_image;
    in property <image> no_light_image;
    in property <TimeOfDay> time_of_day;
    in property <float> night_factor;
    in property <bool> lighted;

    day := Image {
        source: day_image;
        states [
            night when time_of_day == TimeOfDay.NIGHT: {
                visible: false;
            }
        ]
    }

    night_layer := Image {
        source: night_image;
        opacity: night_factor;
        states [
            lighted when lighted: {
                source: night_image;
            }
            not_lighted when !lighted: {
                source: no_light_image;
            }
        ]
    }
}


export component Moon inherits Rectangle {
    width: 34px;
    height: 34px;
    // border-radius: root.width / 2;
    in property <image> moon;

    // background: #fff699;

    img := Image {
        source: moon;
    }
}

export component World inherits Rectangle {

    border-radius: root.height / 2;
    clip: true;

    in property <TimeOfDay> time_of_day;
    in property <float> night_factor;
    in property <MonsterPosition> position;
    in property <bool> monster_visibility;
    in property <image> moon;
    in property <brush> sky_brush;

    in property <image> monster;

    states [
        sleeping when position.env == MonsterEnv.SLEEPING: {
            monster_in_house.visible: false;
            monster_outside.visible: false;
        }
        house when position.env == MonsterEnv.HOUSE: {
            monster_in_house.visible: true;
            monster_outside.visible: false;
        }
        outside when position.env == MonsterEnv.OUTSIDE: {
            monster_in_house.visible: false;
            monster_outside.visible: true;
        }
    ]

    sky := Rectangle {
        // border radius doesn't works with gradients
        height: 100%;
        width: 100%;
        // background: @linear-gradient(90deg, #b54910.darker(angle / 100)  10%,  #214050.darker(angle / 100) 90%);
        background: sky_brush;
    }

    stars := Image {
        source: @image-url("./img/layers/99-sky-night.png");
        opacity: night_factor;
    }

    bg := DayAndNightImage {
        day_image: @image-url("./img/layers/98-background.png");
        night_factor: night_factor;
        night_image: @image-url("./img/layers/98-background-night.png");
        no_light_image: @image-url("./img/layers/98-background-no-light.png");
        time_of_day: time_of_day;
        lighted: position.env == MonsterEnv.HOUSE;
    }

    Moon {
        moon: moon;
        x: 70px;
        y: -0px;
        opacity: night_factor;
        states [
            night when time_of_day == TimeOfDay.TWILIGHT || time_of_day == TimeOfDay.NIGHT: {
                visible: true;
            }
            day when time_of_day == TimeOfDay.DAY: {
                visible: false;
            }
        ]
    }

    monster_in_house := Monster {
        img_source: monster;
        visible_on_screen: monster_visibility;
        x: position.x * 1px;
        y: position.y * 1px;
    }

    house := DayAndNightImage {
        day_image: @image-url("./img/layers/0-house.png");
        night_factor: night_factor;
        night_image: @image-url("./img/layers/0-house-night.png");
        no_light_image: @image-url("./img/layers/0-house-no-light.png");
        time_of_day: time_of_day;
        lighted: position.env == MonsterEnv.HOUSE;
    }

    window := DayAndNightImage {
        day_image: @image-url("./img/layers/1-windows.png");
        night_factor: night_factor;
        night_image: @image-url("./img/layers/1-windows-night.png");
        no_light_image: @image-url("./img/layers/1-windows-no-light.png");
        time_of_day: time_of_day;
        lighted: position.env == MonsterEnv.HOUSE;
    }

    monster_outside := Monster {
        img_source: monster;
        visible_on_screen: monster_visibility;
        x: position.x * 1px;
        y: position.y * 1px;
    }

    fence := DayAndNightImage {
        day_image: @image-url("./img/layers/2-fence.png");
        night_factor: night_factor;
        night_image: @image-url("./img/layers/2-fence-night.png");
        no_light_image: @image-url("./img/layers/2-fence-no-light.png");
        time_of_day: time_of_day;
        lighted: position.env == MonsterEnv.HOUSE;
    }
 
}
