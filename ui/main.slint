import { HorizontalBox, VerticalBox, Button, Spinner } from "std-widgets.slint";
import "assets/editundo.ttf";

import { Globals, WifiState, TimeOfDay } from "common.slint";
import { World , Monster} from "background.slint";
export { Globals }

export component Recipe inherits Window {
    default-font-family: "Edit Undo BRK";
    always-on-top: true;
    height: 240px;
    width: 240px;

    world := World {
        monster: @image-url("img/anims/c-1-open.png");
        position: Globals.monster_position;
        time_of_day: Globals.time_of_day;
        moon: Globals.moon;
        night_factor: Globals.night_factor;
        sky_brush: Globals.sky_brush;
        monster_visibility: Globals.monster_visibility;
    }

    VerticalBox {
        HorizontalBox {
            max-height: self.min-height;

            Text {
                font-family: "Edit Undo BRK";
                font-size: 72px;
                horizontal-alignment: TextHorizontalAlignment.center;
                text: Globals.name;
                states [
                    night when Globals.night_factor > 0%: {
                        color: hsv(0, 0, 0% + (Globals.night_factor * 100 - 60).clamp(0,40) * 1%);
                        stroke: black;
                        stroke-width: 1px;
                        stroke-style: center;
                    }
                    day when Globals.time_of_day == TimeOfDay.DAY: {
                        color: black;
                    }
                ]
            }
        }
    }

    Image {
        source: @image-url("img/wifi.png");
        x: parent.height / 2 - self.height - 1px;
        y: parent.width - self.width - 2px;
        states [
            not_running when Globals.wifi_state == WifiState.STARTING: {
                colorize: red;
            }
            link_up when Globals.wifi_state == WifiState.LINK-UP: {
                colorize: darkorange;
            }
            ok when Globals.wifi_state == WifiState.OK: {
                visible: false;
            }
        ]
    }
}
